Subject: [PATCH] Uncommitted changes before Checkout at 6/18/2024 1:58 AM [Changes]
---
Index: app/controllers/comments_controller.rb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/controllers/comments_controller.rb b/app/controllers/comments_controller.rb
new file mode 100644
--- /dev/null	
+++ b/app/controllers/comments_controller.rb	
@@ -0,0 +1,56 @@
+# frozen_string_literal: true
+
+class CommentsController < ApplicationController
+  before_action :set_review
+
+  def index
+    @comments = @review.comments
+  end
+
+  def show; end
+
+  def new
+    @comment = Comment.new
+  end
+
+  def edit; end
+
+  def create
+    @book = Book.find(params[:book_id])
+    @review = @book.reviews.find(params[:review_id])
+    @comment = @review.comments.build(comment_params)
+
+    if @comment.save
+      redirect_to @book, notice: 'Comment was successfully created.'
+    else
+      render 'books/show'
+    end
+  end
+
+  def update
+    if @comment.update(comment_params)
+      redirect_to review_comments_path(@review), notice: 'Comment was successfully updated.'
+    else
+      render :edit
+    end
+  end
+
+  def destroy
+    @comment.destroy
+    redirect_to review_comments_path(@review), notice: 'Comment was successfully destroyed.'
+  end
+
+  private
+
+  def set_review
+    @review = Review.find(params[:review_id])
+  end
+
+  def set_comment
+    @comment = @review.comments.find(params[:id])
+  end
+
+  def comment_params
+    params.require(:comment).permit(:commenter, :body)
+  end
+end
Index: test/controllers/comments_controller_test.rb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test/controllers/comments_controller_test.rb b/test/controllers/comments_controller_test.rb
new file mode 100644
--- /dev/null	
+++ b/test/controllers/comments_controller_test.rb	
@@ -0,0 +1,13 @@
+require "test_helper"
+
+class CommentsControllerTest < ActionDispatch::IntegrationTest
+  test "should get new" do
+    get comment_new_url
+    assert_response :success
+  end
+
+  test "should get create" do
+    get comment_create_url
+    assert_response :success
+  end
+end
Index: app/helpers/comments_helper.rb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/helpers/comments_helper.rb b/app/helpers/comments_helper.rb
new file mode 100644
--- /dev/null	
+++ b/app/helpers/comments_helper.rb	
@@ -0,0 +1,2 @@
+module CommentsHelper
+end
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -9,7 +9,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="4655b10e-ee27-4a91-86a0-a796bb50287b" name="Changes" comment="comments form works now!  &lt;%= form_with model: [@book, r, Comment.new] do |form| %&gt;">
+    <list default="true" id="4655b10e-ee27-4a91-86a0-a796bb50287b" name="Changes" comment="commit misc files">
       <change beforePath="$PROJECT_DIR$/app/models/book.rb" beforeDir="false" afterPath="$PROJECT_DIR$/app/models/book.rb" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -391,6 +391,7 @@
       <workItem from="1717820536415" duration="17455000" />
       <workItem from="1718169009747" duration="2188000" />
       <workItem from="1718316635861" duration="622000" />
+      <workItem from="1718689785812" duration="452000" />
     </task>
     <task id="LOCAL-00001" summary="added migration for comments table">
       <option name="closed" value="true" />
@@ -448,7 +449,15 @@
       <option name="project" value="LOCAL" />
       <updated>1718087338492</updated>
     </task>
-    <option name="localTasksCounter" value="8" />
+    <task id="LOCAL-00008" summary="commit misc files">
+      <option name="closed" value="true" />
+      <created>1718690106299</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1718690106315</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -462,12 +471,13 @@
     <MESSAGE value="reformat everything + trying to get embedded comments view to work" />
     <MESSAGE value="making sure comments reference reviews" />
     <MESSAGE value="comments form works now!  &lt;%= form_with model: [@book, r, Comment.new] do |form| %&gt;" />
-    <option name="LAST_COMMIT_MESSAGE" value="comments form works now!  &lt;%= form_with model: [@book, r, Comment.new] do |form| %&gt;" />
+    <MESSAGE value="commit misc files" />
+    <option name="LAST_COMMIT_MESSAGE" value="commit misc files" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/rubyreads@spec__rubyreads.rcov" NAME="spec: rubyreads Coverage Results" MODIFIED="1717205692378" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="rubyreads" />
     <SUITE FILE_PATH="coverage/rubyreads@BooksControllerTest.rcov" NAME="BooksControllerTest Coverage Results" MODIFIED="1717205381378" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="rubyreads" />
-    <SUITE FILE_PATH="coverage/rubyreads@rubyreads.rcov" NAME="rubyreads Coverage Results" MODIFIED="1718086145678" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="rubyreads" />
+    <SUITE FILE_PATH="coverage/rubyreads@rubyreads.rcov" NAME="rubyreads Coverage Results" MODIFIED="1718689874159" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="rubyreads" />
     <SUITE FILE_PATH="coverage/rubyreads@test__rubyreads.rcov" NAME="test: rubyreads Coverage Results" MODIFIED="1717211599977" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="rcov" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" MODULE_NAME="rubyreads" />
   </component>
 </project>
\ No newline at end of file
Index: app/views/comments/create.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/create.html.erb b/app/views/comments/create.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/create.html.erb	
@@ -0,0 +1,2 @@
+<h1>Comment#create</h1>
+<p>Find me in app/views/comment/create.html.erb</p>
Index: app/views/comments/create.json.jbuilder
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/create.json.jbuilder b/app/views/comments/create.json.jbuilder
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/create.json.jbuilder	
@@ -0,0 +1,1 @@
+json.extract! @comment, :id, :commenter, :comment, :review_id, :created_at, :updated_at
Index: app/views/comments/edit.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/edit.html.erb b/app/views/comments/edit.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/edit.html.erb	
@@ -0,0 +1,6 @@
+<h1>Editing Comment</h1>
+
+<%= render 'form', comment: @comment %>
+
+<%= link_to 'Show', [@review, @comment] %> |
+<%= link_to 'Back', review_comments_path(@review) %>
\ No newline at end of file
Index: app/views/comments/index.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/index.html.erb b/app/views/comments/index.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/index.html.erb	
@@ -0,0 +1,25 @@
+<h1>Comments</h1>
+
+<table>
+  <thead>
+  <tr>
+    <th>Commenter</th>
+    <th>Comment</th>
+    <th colspan="3"></th>
+  </tr>
+  </thead>
+
+  <tbody>
+  <% @comments.each do |comment| %>
+    <tr>
+      <td><%= comment.commenter %></td>
+      <td><%= comment.comment %></td>
+      <td><%= link_to 'Show', [@review, comment] %></td>
+      <td><%= link_to 'Edit', edit_review_comment_path(@review, comment) %></td>
+      <td><%= link_to 'Destroy', [@review, comment], method: :delete, data: { confirm: 'Are you sure?' } %></td>
+    </tr>
+  <% end %>
+  </tbody>
+</table>
+
+<%= link_to 'New Comment', new_review_comment_path(@review) %>
Index: app/views/comments/index.json.jbuilder
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/index.json.jbuilder b/app/views/comments/index.json.jbuilder
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/index.json.jbuilder	
@@ -0,0 +1,3 @@
+json.array! @comments do |comment|
+  json.extract! comment, :id, :commenter, :comment, :review_id, :created_at, :updated_at
+end
Index: app/views/comments/new.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/new.html.erb b/app/views/comments/new.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/new.html.erb	
@@ -0,0 +1,5 @@
+<h1>New Comment</h1>
+
+<%= render 'form', comment: @comment %>
+
+<%= link_to 'Back', review_comments_path(@review) %>
\ No newline at end of file
Index: app/views/comments/show.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/show.html.erb b/app/views/comments/show.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/show.html.erb	
@@ -0,0 +1,12 @@
+<p>
+  <strong>Commenter:</strong>
+  <%= @comment.commenter %>
+</p>
+
+<p>
+  <strong>Comment:</strong>
+  <%= @comment.comment %>
+</p>
+
+<%= link_to 'Edit', edit_review_comment_path(@review, @comment) %> |
+<%= link_to 'Back', review_comments_path(@review) %>
Index: app/views/comments/show.json.jbuilder
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/show.json.jbuilder b/app/views/comments/show.json.jbuilder
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/show.json.jbuilder	
@@ -0,0 +1,1 @@
+json.extract! @comment, :id, :commenter, :comment, :review_id, :created_at, :updated_at
\ No newline at end of file
Index: app/views/comments/_form.html.erb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/views/comments/_form.html.erb b/app/views/comments/_form.html.erb
new file mode 100644
--- /dev/null	
+++ b/app/views/comments/_form.html.erb	
@@ -0,0 +1,26 @@
+<%= form_with(model: [@review, @review.comments.build], local: true) do |form| %>
+  <% if @comment.errors.any? %>
+    <div id="error_explanation">
+      <h2><%= pluralize(@comment.errors.count, "error") %> prohibited this comment from being saved:</h2>
+      <ul>
+        <% @comment.errors.full_messages.each do |message| %>
+          <li><%= message %></li>
+        <% end %>
+      </ul>
+    </div>
+  <% end %>
+
+  <div class="field">
+    <%= form.label :commenter %>
+    <%= form.text_field :commenter %>
+  </div>
+
+  <div class="field">
+    <%= form.label :body %>
+    <%= form.text_area :body %>
+  </div>
+
+  <div class="actions">
+    <%= form.submit %>
+  </div>
+<% end %>
\ No newline at end of file
diff --git a/identifier.sqlite b/identifier.sqlite
new file mode 100644
